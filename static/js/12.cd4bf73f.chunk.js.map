{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Component","AuthStore","useStores","history","useHistory","name","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"wiBAOA,IAAMA,EAAUC,IAAOC,IAAV,KASPC,EAAQF,IAAOG,GAAV,KAOLC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,EACRH,KAAM,KAiHKI,UA7GG,WAAO,IACfC,EAAcC,cAAdD,UACFE,EAAUC,cAuChB,OACE,kBAACf,EAAD,KACA,kBAACG,EAAD,qBACA,kBAAC,IAAD,iBACME,EADN,CAEEW,KAAK,QAELC,SA5Ca,SAAAC,GACfC,QAAQC,IAAI,WAAYF,GACxBN,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,YAAYL,EAAOM,UAC7BZ,EAAUa,WACPC,MAAK,WACJP,QAAQC,IAAI,gEACZN,EAAQa,KAAK,QACZC,OAAM,WACTT,QAAQC,IAAI,+DAoCZS,eAhCmB,SAAAC,GACrBX,QAAQC,IAAI,UAAWU,MAiCrB,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCAEX,CAACC,UArCc,SAACC,EAAKC,GAC3B,MAAG,KAAKC,KAAKD,GACJE,QAAQC,OAAO,sEAErBH,EAAMI,OAAQ,GAAKJ,EAAMI,OAAS,GAC5BF,QAAQC,OAAO,mDAEjBD,QAAQG,cAiCX,kBAAC,IAAD,OAGF,kBAAC,IAAKZ,KAAN,CACEC,MAAM,eACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CACES,IAAI,EACJT,QAAQ,+CAEV,CACEU,IAAI,GACJV,QAAQ,kDAIZ,kBAAC,IAAMW,SAAP,OAGF,kBAAC,IAAKf,KAAN,CACEC,MAAM,2BACNhB,KAAK,kBACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCA5DK,SAAC,GAAD,IAAEY,EAAF,EAAEA,cAAF,MAAoB,CAC1CX,UAD0C,SAChCC,EAAKC,GACb,OAAGS,EAAc,cAAgBT,EACtBE,QAAQG,UAEZH,QAAQC,OAAO,mDA4DpB,kBAAC,IAAMK,SAAP,OAGF,kBAAC,IAAKf,KAAStB,EACb,kBAAC,IAAD,CAAQuC,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/12.cd4bf73f.chunk.js","sourcesContent":["\nimport React from \"react\"\nimport { Form, Input, Button } from 'antd';\nimport styled from  'styled-components'\nimport { useStores } from \"../stores\"\nimport { useHistory } from 'react-router-dom'\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  padding: 20px;\n  margin: 30px auto;\nborder-radius: 12px;\nbackground: #ffffff;\nbox-shadow:  16px 16px 32px #e0e0e0, \n             -16px -16px 32px #ffffff;\n`\nconst Title = styled.h1`\n  text-align:center;\n  margin-bottom: 30px;\n`\n\n\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 14,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 14,\n  },\n};\n\nconst Component = () => {\n  const { AuthStore } = useStores()\n  const history = useHistory()\n\n  const onFinish = values => {\n    console.log('Success:', values);\n    AuthStore.setUsername(values.username)\n    AuthStore.setPassword(values.password)\n    AuthStore.register()\n      .then(()=>{\n        console.log('注册成功，跳转到首页')\n        history.push('/')\n      }).catch(()=>{\n      console.log('注册失败,什么也不做')\n    })\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n\n  const validateUsername=(rule,value)=>{\n    if(/\\W/.test(value)){\n      return Promise.reject('只能是字母数字和下划线')\n    }\n    if(value.length <4 || value.length > 10){\n      return Promise.reject('长度为 4～10 个字符')\n    }\n    return Promise.resolve()\n  }\n\n  const validateConfirm = ({getFieldValue})=>({\n    validator(rule,value){\n      if(getFieldValue('password') === value){\n          return Promise.resolve()\n      }\n      return Promise.reject('两次密码不一致')\n    }\n  })\n\n  return (\n    <Wrapper>\n    <Title>注册</Title>\n    <Form\n      {...layout}\n      name=\"basic\"\n\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"用户名\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: '请输入用户名',\n          },\n          {validator: validateUsername}\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"密码\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: '请输入密码',\n          },\n          {\n            min:4,\n            message:'不能少于4个字符',\n          },\n          {\n            max:10,\n            message:'不能多于10个字符',\n          }\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        label=\"确认密码\"\n        name=\"conformPassword\"\n        rules={[\n          {\n            required: true,\n            message: '再次确认密码',\n          },\n          validateConfirm\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n    </Wrapper>\n  );\n};\nexport default Component;\n"],"sourceRoot":""}