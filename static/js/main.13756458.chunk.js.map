{"version":3,"sources":["models/index.js","components/Header.js","components/Footer.js","components/Loading.js","App.js","serviceWorker.js","index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js"],"names":["AV","init","appId","appKey","serverURL","Auth","register","username","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","then","loginedUser","console","log","error","login","logIn","logout","logOut","message","getCurrentUser","current","uploader","add","file","fileName","item","Object","avFile","File","set","save","serveFile","find","page","limit","query","Query","include","skip","descending","equalTo","results","catch","StyleHeader","styled","header","StyleLink","NavLink","Login","div","StyleButton","Button","Component","observer","history","useHistory","useStores","UserStore","AuthStore","useEffect","pullUser","to","activeClassName","exact","currentUser","attributes","type","onClick","push","StyleFooter","footer","Footer","Loading","Home","lazy","History","About","Register","App","Header","fallback","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","this","observable","action","newList","List","concat","isLoading","append","length","hasMore","finally","newFileName","newFile","isUploading","values","isLogin","success","resetUser","HistoryStore","reset","ImageSrore","context","createContext","ImageStore","stores","useContext"],"mappings":"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","file":"static/js/main.13756458.chunk.js","sourcesContent":["\nimport AV, { Query,User } from 'leancloud-storage'\nimport { message } from 'antd';\n\nAV.init({\n  appId: \"PAYusTE6FYP70BdiF2GPRs8L-gzGzoHsz\",\n  appKey: \"DUjbnKEqG7rS87eikdL8Bj7T\",\n  serverURL: \"https://payuste6.lc-cn-n1-shared.com\"\n});\n\n\nconst Auth ={\n  register(username,password){\n    let user = new User()\n    user.setUsername(username)\n    user.setPassword(password)\n    return new Promise((resolve,reject)=>{\n      user.signUp().then(loginedUser =>{\n        console.log('注册成功')\n        resolve(loginedUser)\n      }, error=>{\n        reject(error)\n      })\n    })\n  },\n\n  login(username, password) {\n    console.log('------')\n    console.log(username, password)\n    return new Promise((resolve,reject)=>{\n      User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error));\n      });\n    },\n\n  logout(){\n    User.logOut()\n    message.error('退出登陆')\n  },\n\n  getCurrentUser(){\n    return User.current()\n  }\n}\n\n\nconst uploader = {\n  add(file,fileName){\n    const item = new AV.Object('Image')\n    const avFile = new AV.File(fileName, file)\n    item.set('fileName', fileName)\n    item.set('owner', AV.User.current())\n    item.set('url', avFile)\n    return new Promise((resolve,reject)=>{\n      item.save().then(serveFile => resolve(serveFile), error => reject(error))\n    })\n  },\n\n  find({page=0, limit=10}){\n    const query = new AV.Query('Image')\n    query.include('owner')\n    query.limit(limit)\n    query.skip(page * limit)\n    query.descending('createAt')\n    query.equalTo('owner', AV.User.current())\n    return new Promise((resolve, reject)=>{\n      query.find()\n        .then(results => resolve(results))\n        .catch(error => reject(error))\n    })\n  }\n\n}\n\n\n\n\nexport {\n  Auth,\n  uploader\n}","import React,{ useEffect } from \"react\"\n// import Logo from '../logo.svg'\nimport {NavLink,useHistory} from \"react-router-dom\"\nimport styled from  'styled-components'\nimport {Button} from \"antd\"\nimport {useStores} from \"../stores\"\nimport {observer} from \"mobx-react\"\n\nconst StyleHeader = styled.header`\nbackground-color:#02101f;\npadding:10px 100px;\ndisplay:flex;\nalign-item:center;\ncolor:fff;\n`\nconst StyleLink = styled(NavLink)`\ncolor:#fff;\nmargin-left:30px;\n\n&.active{\nborder-bottom:1px solid #fff;\n}\n`\nconst Login = styled.div`\n  margin-left:auto;\n  color:#fff;\n  font-size: 16px;\n`\nconst StyleButton = styled(Button)`\n  margin-left:10px;\n`\nconst Component = observer(()=> {\n\n  const history = useHistory()\n  const { UserStore, AuthStore} =  useStores()\n\n  const handleLogout =()=>{\n    AuthStore.logout()\n  }\n\n  const handleLogin =()=>{\n    console.log('跳转到登陆页面')\n    history.push('/login')\n  }\n\n  const handleRegister =()=>{\n    console.log('跳转到注册页面')\n    history.push('/register')\n  }\n\n  useEffect(()=>{\n    UserStore.pullUser();\n  }, [])\n  \n  return(\n    <StyleHeader>\n      <nav>\n        <StyleLink to=\"/\" activeClassName=\"active\" exact>首页</StyleLink>\n        <StyleLink to=\"/history\" activeClassName=\"active\">上传历史</StyleLink>\n        <StyleLink to=\"/about\" activeClassName=\"active\">关于我</StyleLink>\n      </nav>\n\n      <Login>\n        {\n          UserStore.currentUser ? <>\n            {UserStore.currentUser.attributes.username} <StyleButton type=\"primary\" onClick={handleLogout}>注销</StyleButton>\n          </>: <>\n            <StyleButton type=\"primary\" onClick={handleLogin}>登陆</StyleButton>\n            <StyleButton type=\"primary\" onClick={handleRegister}>注册</StyleButton>\n          </>\n        }\n      </Login>\n    </StyleHeader>\n  );\n})\nexport default Component;","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst StyleFooter  = styled.footer`\npadding:10px 100px;\ntext-align: center;\nfont-size:12px;\ncolor:#aaa;\n`\nfunction Footer() {\n  return(\n    <StyleFooter>\n      <p>Footer</p>\n    </StyleFooter>\n  );\n}\nexport default Footer;","import React from \"react\"\nfunction Loading () {\n  return(\n    <div>loading</div>\n  )\n}\nexport default Loading","import React, { Suspense, lazy } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Loading from './components/Loading';\n\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\n\nconsole.log(Loading)\n// import Home from './pages/Home';\n// import History from './pages/History';\n// import About from './pages/About';\n\nconst Home = lazy(() => import('./pages/Home'));\nconst History = lazy(() => import('./pages/History'));\nconst About = lazy(() => import('./pages/About'));\nconst Login = lazy(() => import('./pages/Login'));\nconst Register = lazy(() => import('./pages/Register'));\n\n\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/history\" component={History} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n          </Switch>\n        </Suspense>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\nimport Model from './models';\nimport {\n  HashRouter as Router\n} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//管理登陆和注册\nimport {observable,action} from \"mobx\"\nimport {Auth} from '../models'\n\nclass UserStore {\n\n  @observable currentUser=null;\n\n  @action pullUser(){\n    this.currentUser=Auth.getCurrentUser()\n  }\n  @action resetUser(){\n    this.currentUser = null;\n  }\n\n}\nexport default new UserStore();","//管理登陆和注册\nimport {observable,action} from \"mobx\"\nimport {message} from \"antd\"\nimport {uploader} from  '../models'\n\nclass HistoryStore {\n\n  @observable List= []\n  @observable isLoading = false\n  @observable hasMore = true\n  @observable page = 0\n    limit = 10\n\n  @action append(newList){\n    this.List = this.List.concat(newList)\n  }\n\n\n\n  @action find(){\n    this.isLoading = true\n    uploader.find({page:this.page,limit:this.limit})\n      .then(newList=>{\n        this.append(newList)\n        this.page++;\n        if(newList.length < this.limit){\n          this.hasMore = false\n        }\n      }).catch(error=>{\n        message.error('加载数据失败')\n    }).finally(()=>{\n      this.isLoading = false\n    })\n  }\n\n\n  @action reset(){\n    this.List=[]\n    this.isLoading = false\n    this.hasMore = true\n    this.page = 0\n  }\n\n}\nexport default new HistoryStore();","\nimport {observable,action} from \"mobx\"\nimport {uploader} from '../models'\nimport {message} from \"antd\"\n\n\nclass ImageStore {\n  @observable fileName=''\n  @observable file = null\n  @observable isUploading = false\n  @observable serveFile = null\n\n  //行为\n  @action setFileName(newFileName) {\n    this.fileName = newFileName\n  }\n\n  @action setFile(newFile) {\n    this.file = newFile\n  }\n\n  @action upload(){\n    this.isUploading = true\n    this.serveFile = null\n    return new Promise((resolve, reject)=>{\n      uploader.add(this.file,this.fileName)\n        .then(serveFile => {\n          this.serveFile =serveFile\n          resolve(serveFile)\n        })\n        .catch(error => {\n          message.error('上传失败')\n          reject(error)\n        }).finally(()=>{\n          this.isUploading = false\n      })\n    })\n  }\n\n  @action reset(){\n    this.isUploading = false\n    this.serveFile = false\n  }\n}\nexport default new ImageStore();","//管理登陆和注册\nimport {observable,action} from \"mobx\"\nimport {Auth} from '../models'\nimport UserStore from './user'\nimport {message} from \"antd\"\nimport HistoryStore from './history'\nimport ImageSrore from './image'\n\nclass AuthStore {\n\n  @observable isLogin = false\n  @observable values = {\n    username:'',\n    password:''\n  }\n\n  //行为\n  @action setUsername(username){\n    this.values.username= username\n  }\n  @action setPassword(password){\n    this.values.password= password\n  }\n  @action login(){\n    this.isLogin = false\n    return new Promise((resolve, reject)=>{\n      Auth.login(this.values.username,this.values.password)\n        .then(user => {\n          UserStore.pullUser()\n          this.isLogin = true\n          message.success('登陆成功')\n          resolve(user)\n        }).catch(error =>{\n        UserStore.resetUser()\n        message.error('登陆失败')\n        this.isLogin = false\n        reject(error)\n      })\n    })\n  }\n  @action register(){\n    return new Promise((resolve, reject)=>{\n      Auth.register(this.values.username,this.values.password)\n        .then(user => {\n          UserStore.pullUser()\n          resolve(user)\n          message.success('注册成功')\n        }).catch(error =>{\n        UserStore.resetUser()\n        message.error('注册失败')\n        reject(error)\n      })\n    })\n  }\n\n  @action logout(){\n    Auth.logout()\n    UserStore.resetUser()\n    HistoryStore.reset()\n    ImageSrore.reset()\n  }\n\n}\nexport default new AuthStore();","//总入口\nimport React,{createContext,useContext} from \"react\"\nimport AuthStore from \"./auth\"\nimport UserStore from './user'\nimport ImageStore from './image'\nimport HistoryStore from './history'\nconst context = createContext({\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n})\n\nwindow.stores ={\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n}\n\nexport const useStores = ()=>useContext(context)"],"sourceRoot":""}